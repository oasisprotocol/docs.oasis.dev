"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[2033],{9243:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"build/rofl/features","title":"Features","description":"Containerized ROFL apps automatically have access to some useful features that","source":"@site/docs/build/rofl/features.md","sourceDirName":"build/rofl","slug":"/build/rofl/features","permalink":"/build/rofl/features","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/oasis-sdk/edit/main/docs/rofl/features.md","tags":[],"version":"current","lastUpdatedAt":1740674219000,"frontMatter":{},"sidebar":"developers","previous":{"title":"Deployment","permalink":"/build/rofl/deployment"},"next":{"title":"Resources","permalink":"/build/rofl/resources"}}');var t=s(4848),i=s(8453);const r={},c="Features",d={},l=[{value:"Secrets",id:"secrets",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Container Secrets",id:"container-secrets",level:3},{value:"ROFL REST APIs",id:"rofl-rest-apis",level:2},{value:"App Identifier",id:"app-identifier",level:3},{value:"Key Generation",id:"key-generation",level:3},{value:"Authenticated Transaction Submission",id:"authenticated-transaction-submission",level:3}];function o(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"features",children:"Features"})}),"\n",(0,t.jsx)(n.p,{children:"Containerized ROFL apps automatically have access to some useful features that\nease development. This chapter provides an introduction to these features."}),"\n",(0,t.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes containers need access to data that should not be disclosed publicly,\nfor example API keys to access certain services. This data can be passed to\ncontainers running inside ROFL apps via ",(0,t.jsx)(n.em,{children:"secrets"}),". Secrets are arbitrary\nkey-value pairs which are end-to-end encrypted so that they can only be\ndecrypted inside a correctly attested ROFL app instance."]}),"\n",(0,t.jsxs)(n.p,{children:["Secrets can be easily managed via the Oasis CLI, for example to create a secret\ncalled ",(0,t.jsx)(n.code,{children:"mysecret"})," you can use:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'echo "my very secret value" | oasis rofl secret set mysecret -\n'})}),"\n",(0,t.jsx)(n.p,{children:"Note that this only encrypts the secret and updates the local app manifest file,\nbut the secret is not propagated to the app just yet. This allows you to easily\nconfigure as many secrets as you want without the need to constantly update the\non-chain app configuration."}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"While the secrets are stored in the local app manifest, this does not mean that\nthe manifest needs to remain private. The secret values inside the manifest are\nend-to-end encrypted and cannot be read even by the administrator who set them."}),(0,t.jsx)(n.p,{children:"When a secret is created, a new ephemeral key is generated that is used in the\nencryption process. The ephemeral key is then immediately discarded so only the\nROFL app itself can decrypt the secret."})]}),"\n",(0,t.jsxs)(n.p,{children:["Updating the on-chain configuration can be performed via the usual ",(0,t.jsx)(n.code,{children:"update"}),"\ncommand as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"oasis rofl update\n"})}),"\n",(0,t.jsx)(n.p,{children:"Inside containers secrets can be passed either via environment variables or via\ncontainer secrets."}),"\n",(0,t.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsxs)(n.p,{children:["Each secret is automatically exposed in the compose environment and can be\ntrivially used in the compose file. Note that when exposed as an environment\nvariable, the secret name is capitalized and spaces are replaced with\nunderscores, so a secret called ",(0,t.jsx)(n.code,{children:"my secret"})," will be available as ",(0,t.jsx)(n.code,{children:"MY_SECRET"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  test:\n    image: docker.io/library/alpine:3.21.2@sha256:f3240395711384fc3c07daa46cbc8d73aa5ba25ad1deb97424992760f8cb2b94\n    command: echo "Hello $MYSECRET!"\n    environment:\n      - MYSECRET=${MYSECRET}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"container-secrets",children:"Container Secrets"}),"\n",(0,t.jsxs)(n.p,{children:["Each secret is also defined as a [container secret] and can be passed to the\ncontainer as such. Note that the secret needs to be defined as an ",(0,t.jsx)(n.em,{children:"external"}),"\nsecret as it is created by the ROFL app during boot."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  test:\n    image: docker.io/library/alpine:3.21.2@sha256:f3240395711384fc3c07daa46cbc8d73aa5ba25ad1deb97424992760f8cb2b94\n    command: echo "Hello $(cat /run/secrets/mysecret)!"\n    secrets:\n      - mysecret\n\nsecrets:\n  mysecret:\n    external: true\n'})}),"\n",(0,t.jsx)(n.h2,{id:"rofl-rest-apis",children:"ROFL REST APIs"}),"\n",(0,t.jsxs)(n.p,{children:["Each containerized ROFL app runs a special daemon (called ",(0,t.jsx)(n.code,{children:"rofl-appd"}),") that\nexposes additional functions via a simple HTTP REST API. In order to make it\neasier to isolate access, the API is exposed via a UNIX socket located at\n",(0,t.jsx)(n.code,{children:"/run/rofl-appd.sock"})," which can be passed to containers via volumes."]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  mycontainer:\n    # ... other details omitted ...\n    volumes:\n      - /run/rofl-appd.sock:/run/rofl-appd.sock\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following sections describe the available endpoints."}),"\n",(0,t.jsx)(n.h3,{id:"app-identifier",children:"App Identifier"}),"\n",(0,t.jsx)(n.p,{children:"This endpoint can be used to retrieve the current ROFL app's identifier."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"/rofl/v1/app/id"})," (",(0,t.jsx)(n.code,{children:"GET"}),")"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rofl1qqn9xndja7e2pnxhttktmecvwzz0yqwxsquqyxdf\n"})}),"\n",(0,t.jsx)(n.h3,{id:"key-generation",children:"Key Generation"}),"\n",(0,t.jsx)(n.p,{children:"Each registered ROFL app automatically gets access to a decentralized on-chain\nkey management system."}),"\n",(0,t.jsx)(n.p,{children:"All generated keys can only be generated inside properly attested ROFL app\ninstances and will remain the same even in case the app is deployed somewhere\nelse or its state is erased."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"/rofl/v1/keys/generate"})," (",(0,t.jsx)(n.code,{children:"POST"}),")"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "key_id": "demo key",\n  "kind": "secp256k1"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request fields:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"key_id"})," is used for domain separation of different keys (e.g. a different key\nid will generate a completely different key)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"kind"})," defines what kind of key should be generated. The following values are\ncurrently supported:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"raw-256"})," to generate 256 bits of entropy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"raw-386"})," to generate 384 bits of entropy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ed25519"})," to generate an Ed25519 private key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"secp256k1"})," to generate a Secp256k1 private key."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "key": "a54027bff15a8726b6d9f65383bff20db51c6f3ac5497143a8412a7f16dfdda9"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The generated ",(0,t.jsx)(n.code,{children:"key"})," is returned as a hexadecimal string."]}),"\n",(0,t.jsx)(n.h3,{id:"authenticated-transaction-submission",children:"Authenticated Transaction Submission"}),"\n",(0,t.jsxs)(n.p,{children:["A ROFL app can also submit ",(0,t.jsx)(n.em,{children:"authenticated transactions"})," to the chain where it is\nregistered at. The special feature of these transactions is that they are signed\nby an endorsed key and are therefore automatically authenticated as coming from\nthe ROFL app itself."]}),"\n",(0,t.jsx)(n.p,{children:"This makes it possible to easily authenticate ROFL apps in smart contracts by\nsimply invoking an appropriate subcall, for example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"Subcall.roflEnsureAuthorizedOrigin(roflAppID);\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"/rofl/v1/tx/sign-submit"})," (",(0,t.jsx)(n.code,{children:"POST"}),")"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "tx": {\n    "kind": "eth",\n    "data": {\n      "gas_limit": 200000,\n      "to": "1234845aaB7b6CD88c7fAd9E9E1cf07638805b20",\n      "value": 0,\n      "data": "dae1ee1f00000000000000000000000000000000000000000000000000002695a9e649b2"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request fields:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tx"})," describes the transaction content with different transaction kinds being\nsupported (as defined by the ",(0,t.jsx)(n.code,{children:"kind"})," field):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Ethereum-compatible calls (",(0,t.jsx)(n.code,{children:"eth"}),") use standard fields (",(0,t.jsx)(n.code,{children:"gas_limit"}),", ",(0,t.jsx)(n.code,{children:"to"}),",\n",(0,t.jsx)(n.code,{children:"value"})," and ",(0,t.jsx)(n.code,{children:"data"}),") to define the transaction content."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Oasis SDK calls (",(0,t.jsx)(n.code,{children:"std"}),") support CBOR-serialized hex-encoded ",(0,t.jsx)(n.code,{children:"Transaction"}),"s\nto be specified."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"encrypted"})," is a boolean flag specifying whether the transaction should be\nencrypted. By default this is ",(0,t.jsx)(n.code,{children:"true"}),". Note that encryption is handled\ntransparently for the caller using an ephemeral key and any response is first\ndecrypted before being passed on."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": "f6"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var a=s(6540);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);