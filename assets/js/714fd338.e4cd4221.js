"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[3343],{1280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee","title":"Set up Trusted Execution Environment (TEE)","description":"In case the ParaTime you want to run does not require the use of a TEE (e.g.","source":"@site/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md","sourceDirName":"node/run-your-node/prerequisites","slug":"/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee","permalink":"/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md","tags":[],"version":"current","lastUpdatedAt":1740674219000,"frontMatter":{},"sidebar":"operators","previous":{"title":"System Configuration","permalink":"/node/run-your-node/prerequisites/system-configuration"},"next":{"title":"Validator Node","permalink":"/node/run-your-node/validator-node"}}');var o=t(4848),i=t(8453);const r={},l="Set up Trusted Execution Environment (TEE)",a={},d=[{value:"BIOS Configuration",id:"bios-configuration",level:2},{value:"Ensure Clock Synchronization",id:"ensure-clock-synchronization",level:2},{value:"Ensure Proper SGX Device Permissions",id:"ensure-proper-sgx-device-permissions",level:2},{value:"AESM Service",id:"aesm-service",level:2},{value:"DCAP Attestation",id:"dcap-attestation",level:2},{value:"Ubuntu 22.04+",id:"ubuntu-2204",level:3},{value:"Configuring the Quote Provider",id:"configuring-the-quote-provider",level:3},{value:"Intel PCS",id:"intel-pcs",level:4},{value:"Cloud Service Provider&#39;s PCCS",id:"cloud-service-providers-pccs",level:4},{value:"Own PCCS",id:"own-pccs",level:4},{value:"DCAP Attestation Docker",id:"dcap-attestation-docker",level:3},{value:"Multi-socket Systems",id:"multi-socket-systems",level:3},{value:"Ubuntu 22.04+",id:"ubuntu-2204-1",level:4},{value:"VMware vSphere 8.0+",id:"vmware-vsphere-80",level:4},{value:"Migrate from EPID Attestation to DCAP Attestation",id:"migrate-from-epid-attestation-to-dcap-attestation",level:2},{value:"Check SGX Setup",id:"check-sgx-setup",level:2},{value:"Install Dependencies",id:"install-dependencies",level:3},{value:"Install Rust",id:"install-rust",level:3},{value:"Build and Install sgxs-tools",id:"build-and-install-sgxs-tools",level:3},{value:"Run <code>sgx-detect</code> Tool",id:"run-sgx-detect-tool",level:3},{value:"Oasis Attestation tool",id:"oasis-attestation-tool",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"AESM could not be contacted",id:"aesm-could-not-be-contacted",level:3},{value:"AESM: error 30",id:"aesm-error-30",level:3},{value:"Permission Denied When Accessing SGX Kernel Device",id:"permission-denied-when-accessing-sgx-kernel-device",level:3},{value:"Error Opening SGX Kernel Device",id:"error-opening-sgx-kernel-device",level:3},{value:"Ensure <code>/dev</code> is NOT Mounted with the <code>noexec</code> Option",id:"ensure-dev-is-not-mounted-with-the-noexec-option",level:4},{value:"Unable to Launch Enclaves: Operation not permitted",id:"unable-to-launch-enclaves-operation-not-permitted",level:3},{value:"Unable to Launch Enclaves: Invalid argument",id:"unable-to-launch-enclaves-invalid-argument",level:3},{value:"Unable to Launch Enclaves: Input/output error",id:"unable-to-launch-enclaves-inputoutput-error",level:3},{value:"Couldn&#39;t find the platform library",id:"couldnt-find-the-platform-library",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"set-up-trusted-execution-environment-tee",children:"Set up Trusted Execution Environment (TEE)"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"In case the ParaTime you want to run does not require the use of a TEE (e.g.\nIntel SGX), you can skip setting up a TEE."})}),"\n",(0,o.jsxs)(n.p,{children:["If the ParaTime is configured to run in a TEE (currently only ",(0,o.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/architecture-and-technology/software-guard-extensions.html",children:"Intel SGX"}),"), you\nmust make sure that your system supports running SGX enclaves. This requires\nthat your hardware has SGX support, that SGX support is enabled and that the\nadditional driver and software components are properly installed and running."]}),"\n",(0,o.jsx)(n.h2,{id:"bios-configuration",children:"BIOS Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["To enable Intel SGX on your hardware, you also need to configure the BIOS.\nFirst, ",(0,o.jsx)(n.strong,{children:"update the BIOS to the latest version with the latest microcode"})," and\nthen proceed with BIOS configuration as shown below. Note that some settings may\nnot apply to your BIOS. In that case, configure only the relevant ones. Please\nset the BIOS settings as follows:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SGX"}),": ENABLE"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Hyper-Threading"}),": DISABLE"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Intel SpeedStep"}),": DISABLE"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Turbo Mode"}),": DISABLE"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CPU AES"}),": ENABLE"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SGX Auto MP Registration"}),": ENABLE"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"ensure-clock-synchronization",children:"Ensure Clock Synchronization"}),"\n",(0,o.jsx)(n.p,{children:"Due to additional sanity checks within runtime enclaves, you should ensure that\nthe node's local clock is synchronized (e.g. using NTP). If it is off by more\nthan half a second you may experience unexpected runtime aborts."}),"\n",(0,o.jsx)(n.h2,{id:"ensure-proper-sgx-device-permissions",children:"Ensure Proper SGX Device Permissions"}),"\n",(0,o.jsxs)(n.p,{children:["Make sure that the user that is running the Oasis Node binary has access to the\nSGX device (e.g. ",(0,o.jsx)(n.code,{children:"/dev/sgx_enclave"}),"). This can usually be achieved by adding\nthe user into the right group, for example in case the permissions of the SGX\ndevice are as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"crw-rw---- 1 root sgx 10, 125 Oct 28 09:28 /dev/sgx_enclave\n"})}),"\n",(0,o.jsxs)(n.p,{children:["and the user running Oasis Node is ",(0,o.jsx)(n.code,{children:"oasis"}),", you can do:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo adduser oasis sgx\n"})}),"\n",(0,o.jsx)(n.p,{children:'Failure to do so may result in the "permission denied OS error 13" during\nruntime startup.'}),"\n",(0,o.jsx)(n.p,{children:"If you are planning to run your node from an interactive session, make sure to\nlog out for permissions to take effect."}),"\n",(0,o.jsx)(n.h2,{id:"aesm-service",children:"AESM Service"}),"\n",(0,o.jsxs)(n.p,{children:["To allow execution of SGX enclaves, several ",(0,o.jsx)(n.strong,{children:"Architectural Enclaves (AE)"})," are\ninvolved (i.e. Launch Enclave, Provisioning Enclave, Provisioning Certificate\nEnclave, Quoting Enclave, Platform Services Enclaves)."]}),"\n",(0,o.jsxs)(n.p,{children:["Communication between application-spawned SGX enclaves and Intel-provided\nArchitectural Enclaves is through ",(0,o.jsx)(n.strong,{children:"Application Enclave Service Manager\n(AESM)"}),". AESM runs as a daemon and provides a socket through which applications\ncan facilitate various SGX services such as launch approval, remote attestation\nquote signing, etc."]}),"\n",(0,o.jsx)(n.p,{children:"Oasis node requires the use of DCAP attestation. To see if your system supports\nit, run the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:' cpuid -1  | grep "SGX"\n'})}),"\n",(0,o.jsx)(n.p,{children:"and look for the following line:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"      SGX_LC: SGX launch config supported      = true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"dcap-attestation",children:"DCAP Attestation"}),"\n",(0,o.jsx)(n.h3,{id:"ubuntu-2204",children:"Ubuntu 22.04+"}),"\n",(0,o.jsxs)(n.p,{children:["A convenient way to install the AESM service on Ubuntu 22.04 systems\nis to use the Intel's ",(0,o.jsx)(n.a,{href:"https://download.01.org/intel-sgx/sgx_repo/",children:"official Intel SGX APT repository"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"First add Intel SGX APT repository to your system:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo gpg --dearmor -o /usr/share/keyrings/intel-sgx-deb.gpg\necho "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-sgx-deb.gpg] https://download.01.org/intel-sgx/sgx_repo/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/intel-sgx.list > /dev/null\n'})}),"\n",(0,o.jsxs)(n.p,{children:["And then install the ",(0,o.jsx)(n.code,{children:"sgx-aesm-service"}),", ",(0,o.jsx)(n.code,{children:"libsgx-aesm-ecdsa-plugin"}),", ",(0,o.jsx)(n.code,{children:"libsgx-aesm-quote-ex-plugin"})," and ",(0,o.jsx)(n.code,{children:"libsgx-dcap-default-qpl"})," packages:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install sgx-aesm-service libsgx-aesm-ecdsa-plugin libsgx-aesm-quote-ex-plugin libsgx-dcap-default-qpl\n"})}),"\n",(0,o.jsx)(n.p,{children:"The AESM service should be up and running. To confirm that, use:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status aesmd.service\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configuring-the-quote-provider",children:"Configuring the Quote Provider"}),"\n",(0,o.jsxs)(n.p,{children:["The Intel Quote Provider (",(0,o.jsx)(n.code,{children:"libsgx-dcap-default-qpl"}),") needs to be configured in\norder to use either the Intel PCS, the PCCS of your cloud service provider, or\nyour own PCCS. The configuration file is located at ",(0,o.jsx)(n.code,{children:"/etc/sgx_default_qcnl.conf"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Make sure to always restart the ",(0,o.jsx)(n.code,{children:"aesmd.service"})," after updating the\nconfiguration, via:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart aesmd.service\n"})}),"\n",(0,o.jsx)(n.h4,{id:"intel-pcs",children:"Intel PCS"}),"\n",(0,o.jsxs)(n.p,{children:["Using the Intel PCS is the simplest and most generic way, but it may be less\nreliable than using your own PCCS. Some cloud providers (see the ",(0,o.jsx)(n.a,{href:"#cloud-service-providers-pccs",children:"following section"}),")\nalso require you to use their PCCS."]}),"\n",(0,o.jsxs)(n.p,{children:["To use Intel PCS update the ",(0,o.jsx)(n.code,{children:"pccs_url"})," value in ",(0,o.jsx)(n.code,{children:"/etc/sgx_default_qcnl.conf"}),"\nto the Intel PCS API URL:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'  //PCCS server address\n  "pccs_url": "https://api.trustedservices.intel.com/sgx/certification/v4/"\n'})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"In case there is an error in the QPL configuration file, attestation will refuse\nto work and the AESM service may produce unhelpful errors like the following:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Couldn't find the platform library. (null)\n"})}),(0,o.jsxs)(n.p,{children:["The only thing that needs to be changed is the ",(0,o.jsx)(n.code,{children:"pccs_url"})," value above. ",(0,o.jsx)(n.strong,{children:"Do not\nadd any comments and/or modify punctuation as these could make the configuration\nfile invalid."})]})]}),"\n",(0,o.jsx)(n.h4,{id:"cloud-service-providers-pccs",children:"Cloud Service Provider's PCCS"}),"\n",(0,o.jsx)(n.p,{children:"Some cloud providers require you to use their PCCS."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Azure: See the ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/security/fundamentals/trusted-hardware-identity-management#how-do-i-use-intel-qpl-with-trusted-hardware-identity-management",children:"Azure documentation"})," for details on configuring the quote provider. The documentation\ncontains an example of an Intel QPL configuration file that can be used."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Alibaba Cloud: See the ",(0,o.jsx)(n.a,{href:"https://www.alibabacloud.com/help/en/ecs/user-guide/build-an-sgx-encrypted-computing-environment",children:"Alibaba Cloud documentation"})," for details on configuring the quote provider. The\ndocumentation shows the required ",(0,o.jsx)(n.code,{children:"sgx_default_qcnl.conf"})," changes."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["IBM Cloud: See the ",(0,o.jsx)(n.a,{href:"https://cloud.ibm.com/docs/vpc?topic=vpc-about-attestation-sgx-dcap-vpc",children:"IBM Cloud documentation"})," for details on configuring the quote provider. The\ndocumentation shows the required ",(0,o.jsx)(n.code,{children:"sgx_default_qcnl.conf"})," changes."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Other cloud providers: If you are using a different cloud service provider, consult their\nspecific documentation for the appropriate PCCS configuration and guidance on configuring the quote provider, or\nuse one of the other PCCS options."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"own-pccs",children:"Own PCCS"}),"\n",(0,o.jsxs)(n.p,{children:["It is also possible to run PCCS yourself. Follow ",(0,o.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/developer/articles/guide/intel-software-guard-extensions-data-center-attestation-primitives-quick-install-guide.html",children:"official Intel instructions"})," on how to setup your own PCCS."]}),"\n",(0,o.jsx)(n.h3,{id:"dcap-attestation-docker",children:"DCAP Attestation Docker"}),"\n",(0,o.jsxs)(n.p,{children:["Alternatively, an easy way to install and run the AESM service on a ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/",children:"Docker"}),"-enabled\nsystem is to use ",(0,o.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-core/pkgs/container/aesmd",children:"our AESM container image"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Executing the following command should (always) pull the latest version of our\nAESMD Docker container, map the SGX devices and ",(0,o.jsx)(n.code,{children:"/var/run/aesmd"})," directory\nand ensure AESM is running in the background (also automatically started on boot):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n"})}),"\n",(0,o.jsxs)(n.p,{children:["By default, the Intel Quote Provider in the docker container is configured to use the Intel PCS endpoint.\nTo override the Intel Quote Provider configuration within the container mount your own custom configuration using\nthe ",(0,o.jsx)(n.code,{children:"volume"})," flag."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --volume /etc/sgx_default_qcnl.conf:/etc/sgx_default_qcnl.conf \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The default Intel Quote Provider config is available in ",(0,o.jsx)(n.a,{href:"https://github.com/intel/SGXDataCenterAttestationPrimitives/blob/master/QuoteGeneration/qcnl/linux/sgx_default_qcnl.conf",children:"Intel SGX Github repository"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"multi-socket-systems",children:"Multi-socket Systems"}),"\n",(0,o.jsx)(n.p,{children:"Note that platform provisioning for multi-socket systems (e.g. systems with\nmultiple CPUs) is more complex, especially if one is using a hypervisor and\nrunning SGX workloads inside guest VMs. In this case additional provisioning may\nbe required to be performed on the host."}),"\n",(0,o.jsxs)(n.p,{children:["Note that the system must be booted in UEFI mode for provisioning to work as the\nprovisioning process uses UEFI variables to communicate with the BIOS. In\naddition the ",(0,o.jsx)(n.strong,{children:"SGX Auto MP Registration"})," BIOS configuration setting should be\nset to ",(0,o.jsx)(n.em,{children:"enabled"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"ubuntu-2204-1",children:"Ubuntu 22.04+"}),"\n",(0,o.jsx)(n.p,{children:"To provision and register your multi-socket system you need to install the Intel\nSGX Multi-Package Registration Agent Service as follows (assuming Intel's SGX\napt repository has been added as discussed above):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"sudo apt install sgx-ra-service\n"})}),"\n",(0,o.jsxs)(n.p,{children:["After boot, the log in ",(0,o.jsx)(n.code,{children:"/var/log/mpa_registration.log"})," should indicate\nsuccessful registration. If an error is reported, make sure that you have\nenabled SGX Auto MP Registration in the BIOS as mentioned above. You can also\nperform re-provisioning by rebooting and setting the ",(0,o.jsx)(n.strong,{children:"SGX Factory Reset"}),"\noption to ",(0,o.jsx)(n.em,{children:"enabled"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"vmware-vsphere-80",children:"VMware vSphere 8.0+"}),"\n",(0,o.jsxs)(n.p,{children:["In order to enable SGX remote attestation on VMware vSphere-based systems,\nplease follow ",(0,o.jsx)(n.a,{href:"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vcenter-esxi-management/GUID-F16476FD-3B66-462F-B7FB-A456BEDC3549.html",children:"the vSphere guide"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"migrate-from-epid-attestation-to-dcap-attestation",children:"Migrate from EPID Attestation to DCAP Attestation"}),"\n",(0,o.jsx)(n.p,{children:"EPID attestation will be discontinued in 2025 and will no longer be available on\nany processors. All nodes using EPID attestation must migrate to DCAP\nattestation."}),"\n",(0,o.jsx)(n.p,{children:"For transitioning to the DCAP attestation, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["See if your system ",(0,o.jsx)(n.a,{href:"#aesm-service",children:"supports DCAP attestation"}),". If your hardware does not\nsupport DCAP attestation, you'll need to migrate your node to newer hardware."]}),"\n",(0,o.jsx)(n.li,{children:"Transition to DCAP attestation:"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["In case you are running AESM service on Docker follow ",(0,o.jsx)(n.a,{href:"#dcap-attestation-docker",children:"these instructions"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Otherwise manually configure AESM service to use DCAP attestation:","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Remove any leftover EPID attestation packages. If running on Ubuntu 22.04 run\nthe following command:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"  sudo apt remove libsgx-aesm-launch-plugin libsgx-aesm-epid-plugin\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["Configure AESM service to use ",(0,o.jsx)(n.a,{href:"#dcap-attestation",children:"DCAP attestation"})]}),"\n",(0,o.jsx)(n.li,{children:"Restart the AESM service. If running on Ubuntu 22.04 run the following\ncommand:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart aesmd.service\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#configuring-the-quote-provider",children:"Configure the Quote Provider"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.a,{href:"#oasis-attestation-tool",children:"attestation tool"})," to test if your settings are correct."]}),"\n",(0,o.jsxs)(n.li,{children:["Restart your compute node and verify that node is ",(0,o.jsx)(n.code,{children:"ready"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"check-sgx-setup",children:"Check SGX Setup"}),"\n",(0,o.jsxs)(n.p,{children:["In order to make sure that your SGX setup is working, you can use the\n",(0,o.jsx)(n.code,{children:"sgx-detect"})," tool from the ",(0,o.jsx)(n.a,{href:"https://lib.rs/crates/sgxs-tools",children:"sgxs-tools"})," Rust\npackage."]}),"\n",(0,o.jsx)(n.p,{children:"There are no pre-built packages for it, so you will need to compile it yourself."}),"\n",(0,o.jsx)(n.h3,{id:"install-dependencies",children:"Install Dependencies"}),"\n",(0,o.jsx)(n.p,{children:"Make sure you have the following installed on your system:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://gcc.gnu.org",children:"GCC"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/protocolbuffers/protobuf",children:"Protobuf"})," compiler."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.freedesktop.org/wiki/Software/pkg-config",children:"pkg-config"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.openssl.org",children:"OpenSSL"})," development package."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"On Fedora, you can install all the above with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo dnf install gcc protobuf-compiler pkg-config openssl-devel\n"})}),"\n",(0,o.jsx)(n.p,{children:"On Ubuntu, you can install all the above with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo apt install gcc protobuf-compiler pkg-config libssl-dev\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"install-rust",children:["Install ",(0,o.jsx)(n.a,{href:"https://www.rust-lang.org",children:"Rust"})]}),"\n",(0,o.jsxs)(n.p,{children:["We follow ",(0,o.jsx)(n.a,{href:"https://www.rust-lang.org/tools/install",children:"Rust upstream's recommendation"}),"\non using ",(0,o.jsx)(n.a,{href:"https://rustup.rs",children:"rustup"})," to install and manage Rust versions."]}),"\n",(0,o.jsx)(n.admonition,{type:"caution",children:(0,o.jsx)(n.p,{children:"rustup cannot be installed alongside a distribution packaged Rust version. You\nwill need to remove it (if it's present) before you can start using rustup."})}),"\n",(0,o.jsx)(n.p,{children:"Install rustup by running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to avoid directly executing a shell script fetched the internet, you\ncan also ",(0,o.jsxs)(n.a,{href:"https://rust-lang.github.io/rustup/installation/other.html",children:["download ",(0,o.jsx)(n.code,{children:"rustup-init"})," executable for your platform"]}),"\nand run it manually. This will run ",(0,o.jsx)(n.code,{children:"rustup-init"})," which will download and install\nthe latest stable version of Rust on your system."]})}),"\n",(0,o.jsx)(n.h3,{id:"build-and-install-sgxs-tools",children:"Build and Install sgxs-tools"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cargo install sgxs-tools\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"run-sgx-detect-tool",children:["Run ",(0,o.jsx)(n.code,{children:"sgx-detect"})," Tool"]}),"\n",(0,o.jsxs)(n.p,{children:["After the installation completes, run ",(0,o.jsx)(n.code,{children:"sgx-detect"})," to make sure that everything\nis set up correctly:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo $(which sgx-detect)\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you don't run the ",(0,o.jsx)(n.code,{children:"sgx-detect"})," tool as ",(0,o.jsx)(n.code,{children:"root"}),", it might not have the\nnecessary permissions to access the SGX kernel device."]})}),"\n",(0,o.jsx)(n.p,{children:"When everything works, you should get output similar to the following (some\nthings depend on hardware features so your output may differ):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Detecting SGX, this may take a minute...\n\u2714  SGX instruction set\n  \u2714  CPU support\n  \u2714  CPU configuration\n  \u2714  Enclave attributes\n  \u2714  Enclave Page Cache\n  SGX features\n    \u2714  SGX2  \u2714  EXINFO  \u2714  ENCLV  \u2714  OVERSUB  \u2714  KSS\n    Total EPC size: 92.8MiB\n\u2718  Flexible launch control\n  \u2714  CPU support\n  \uff1f CPU configuration\n  \u2718  Able to launch production mode enclave\n\u2714  SGX system software\n  \u2714  SGX kernel device (/dev/sgx_enclave)\n  \u2718  libsgx_enclave_common\n  \u2714  AESM service\n  \u2714  Able to launch enclaves\n    \u2714  Debug mode\n    \u2718  Production mode\n    \u2714  Production mode (Intel whitelisted)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The important part is the checkbox under ",(0,o.jsx)(n.em,{children:"Able to launch enclaves"})," in both\n",(0,o.jsx)(n.em,{children:"Debug mode"})," and ",(0,o.jsx)(n.em,{children:"Production mode (Intel whitelisted)"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In case you encounter errors, see the ",(0,o.jsx)(n.a,{href:"https://edp.fortanix.com/docs/installation/help/",children:"list of common SGX installation issues"}),"\nfor help."]}),"\n",(0,o.jsx)(n.h3,{id:"oasis-attestation-tool",children:"Oasis Attestation tool"}),"\n",(0,o.jsxs)(n.p,{children:["To test if your settings are correct, you may use the ",(0,o.jsx)(n.a,{href:"#oasis-attestation-tool",children:"attestation tool"}),"\n(",(0,o.jsx)(n.a,{href:"https://github.com/oasisprotocol/tools/releases",children:"binary"}),") for testing remote attestation against Intel SGX's\ndevelopment server."]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsxs)(n.p,{children:["See  ",(0,o.jsx)(n.a,{href:"/node/run-your-node/troubleshooting",children:"the general troubleshooting section"}),", before\nproceeding with ParaTime node-specific troubleshooting."]}),"\n",(0,o.jsx)(n.h3,{id:"aesm-could-not-be-contacted",children:"AESM could not be contacted"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udd6e  SGX system software > AESM service\nAESM could not be contacted. AESM is needed for launching enclaves and generating attestations.\n\nPlease check your AESM installation.\n\ndebug: error communicating with aesm\ndebug: cause: Connection refused (os error 111)\n\nMore information: https://edp.fortanix.com/docs/installation/help/#aesm-service\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Ensure  you have completed all the necessary installation steps outlined in\n",(0,o.jsx)(n.a,{href:"#dcap-attestation",children:"DCAP Attestation"})," section."]}),"\n",(0,o.jsx)(n.h3,{id:"aesm-error-30",children:"AESM: error 30"}),"\n",(0,o.jsx)(n.p,{children:"If you are encountering the following error message in your node's logs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"failed to initialize TEE: error while getting quote info from AESMD: aesm: error 30\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Ensure you have all required SGX driver libraries installed as listed in\n",(0,o.jsx)(n.a,{href:"#dcap-attestation",children:"DCAP Attestation"})," section."]}),"\n",(0,o.jsx)(n.h3,{id:"permission-denied-when-accessing-sgx-kernel-device",children:"Permission Denied When Accessing SGX Kernel Device"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udd6e  SGX system software > SGX kernel device\nPermission denied while opening the SGX device (/dev/sgx/enclave, /dev/sgx or\n/dev/isgx). Make sure you have the necessary permissions to create SGX enclaves.\nIf you are running in a container, make sure the device permissions are\ncorrectly set on the container.\n\ndebug: Error opening device: Permission denied (os error 13)\ndebug: cause: Permission denied (os error 13)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Ensure you are running the ",(0,o.jsx)(n.code,{children:"sgx-detect"})," tool as ",(0,o.jsx)(n.code,{children:"root"})," via:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo $(which sgx-detect) --verbose\n"})}),"\n",(0,o.jsx)(n.h3,{id:"error-opening-sgx-kernel-device",children:"Error Opening SGX Kernel Device"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'\ud83d\udd6e  SGX system software > SGX kernel device\nThe SGX device (/dev/sgx/enclave, /dev/sgx or /dev/isgx) could not be opened:\n"/dev" mounted with `noexec` option.\n\ndebug: Error opening device: "/dev" mounted with `noexec` option\ndebug: cause: "/dev" mounted with `noexec` option\n'})}),"\n",(0,o.jsxs)(n.h4,{id:"ensure-dev-is-not-mounted-with-the-noexec-option",children:["Ensure ",(0,o.jsx)(n.code,{children:"/dev"})," is NOT Mounted with the ",(0,o.jsx)(n.code,{children:"noexec"})," Option"]}),"\n",(0,o.jsxs)(n.p,{children:["Some Linux distributions mount ",(0,o.jsx)(n.code,{children:"/dev"})," with the ",(0,o.jsx)(n.code,{children:"noexec"})," mount option. If that is\nthe case, it will prevent the enclave loader from mapping executable pages."]}),"\n",(0,o.jsxs)(n.p,{children:["Ensure your ",(0,o.jsx)(n.code,{children:"/dev"})," (i.e. ",(0,o.jsx)(n.code,{children:"devtmpfs"}),") is not mounted with the ",(0,o.jsx)(n.code,{children:"noexec"})," option.\nTo check that, use:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cat /proc/mounts | grep devtmpfs\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To temporarily remove the ",(0,o.jsx)(n.code,{children:"noexec"})," mount option for ",(0,o.jsx)(n.code,{children:"/dev"}),", run:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo mount -o remount,exec /dev\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To permanently remove the ",(0,o.jsx)(n.code,{children:"noexec"})," mount option for ",(0,o.jsx)(n.code,{children:"/dev"}),", add the following to\nthe system's ",(0,o.jsx)(n.code,{children:"/etc/fstab"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"devtmpfs        /dev        devtmpfs    defaults,exec 0 0\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["This is the recommended way to modify mount options for virtual (i.e. API) file\nsystem as described in ",(0,o.jsx)(n.a,{href:"https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/",children:"systemd's API File Systems"}),"\ndocumentation."]})}),"\n",(0,o.jsx)(n.h3,{id:"unable-to-launch-enclaves-operation-not-permitted",children:"Unable to Launch Enclaves: Operation not permitted"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udd6e  SGX system software > Able to launch enclaves > Debug mode\nThe enclave could not be launched.\n\ndebug: failed to load report enclave\ndebug: cause: failed to load report enclave\ndebug: cause: Failed to map enclave into memory.\ndebug: cause: Operation not permitted (os error 1)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Ensure your system's ",(0,o.jsxs)(n.a,{href:"#ensure-dev-is-not-mounted-with-the-noexec-option",children:[(0,o.jsx)(n.code,{children:"/dev"})," is NOT mounted with the ",(0,o.jsx)(n.code,{children:"noexec"})," mount option"]}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"unable-to-launch-enclaves-invalid-argument",children:"Unable to Launch Enclaves: Invalid argument"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udd6e  SGX system software > Able to launch enclaves > Debug mode\nThe enclave could not be launched.\n\ndebug: failed to load report enclave\ndebug: cause: Failed to call EINIT.\ndebug: cause: I/O ctl failed.\ndebug: cause: Invalid argument (os error 22)\n"})}),"\n",(0,o.jsx)(n.p,{children:"This may be related to a bug in the Linux kernel when attempting to run enclaves\non certain hardware configurations. Upgrading the Linux kernel to a version\nequal to or greater than 6.5.0 may solve the issue."}),"\n",(0,o.jsx)(n.h3,{id:"unable-to-launch-enclaves-inputoutput-error",children:"Unable to Launch Enclaves: Input/output error"}),"\n",(0,o.jsxs)(n.p,{children:["If running ",(0,o.jsx)(n.code,{children:"sgx-detect --verbose"})," reports:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udd6e SGX system software > Able to launch enclaves > Debug mode\nThe enclave could not be launched.\n\ndebug: failed to load report enclave\ndebug: cause: Failed to call ECREATE.\ndebug: cause: I/O ctl failed.\ndebug: cause: Input/output error (os error 5)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This may be related to a bug in the ",(0,o.jsx)(n.a,{href:"https://github.com/fortanix/rust-sgx/issues/565",children:(0,o.jsx)(n.code,{children:"rust-sgx"})}),"\nlibrary causing ",(0,o.jsx)(n.code,{children:"sgx-detect"})," (and ",(0,o.jsx)(n.code,{children:"attestation-tool"}),") to fail and report that\ndebug enclaves cannot be launched. This is a known issue and is being worked on.\nIf the ",(0,o.jsx)(n.code,{children:"sgx-detect"})," is reporting that production enclaves can be launched, you\ncan ignore this error when setting up the Oasis node."]}),"\n",(0,o.jsx)(n.h3,{id:"couldnt-find-the-platform-library",children:"Couldn't find the platform library"}),"\n",(0,o.jsx)(n.p,{children:"If AESMD service log reports:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[read_persistent_data ../qe_logic.cpp:1084] Couldn't find the platform library. (null)\n[get_platform_quote_cert_data ../qe_logic.cpp:438] Couldn't load the platform library. (null)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["It may be that the ",(0,o.jsx)(n.a,{href:"#configuring-the-quote-provider",children:"DCAP quote provider"})," is misconfigured or the configuration\nfile is not a valid JSON file but is malformed. Double-check that its\nconfiguration file (e.g. ",(0,o.jsx)(n.code,{children:"/etc/sgx_default_qcnl.conf"}),") is correct."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);