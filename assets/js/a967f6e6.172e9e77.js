"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[9841],{7083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"build/tools/verification","title":"Contract Verification","description":"Verifying deployed contracts","source":"@site/docs/build/tools/verification.md","sourceDirName":"build/tools","slug":"/build/tools/verification","permalink":"/build/tools/verification","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/build/tools/verification.md","tags":[],"version":"current","lastUpdatedAt":1740674219000,"frontMatter":{"description":"Verifying deployed contracts"},"sidebar":"developers","previous":{"title":"ABI Playground","permalink":"/build/tools/abi-playground"},"next":{"title":"Band Oracle","permalink":"/build/tools/band"}}');var r=n(4848),o=n(8453);const a={description:"Verifying deployed contracts"},s="Contract Verification",c={},d=[{value:"Verification with Hardhat",id:"verification-with-hardhat",level:2},{value:"Verification with Foundry",id:"verification-with-foundry",level:2},{value:"Verification on Sourcify",id:"verification-on-sourcify",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Etherscan error with hardhat-verify",id:"etherscan-error-with-hardhat-verify",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"contract-verification",children:"Contract Verification"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://sourcify.dev/",children:"Sourcify"})," is the preferred service for the ",(0,r.jsx)(t.a,{href:"https://ethereum.org/en/developers/docs/smart-contracts/verifying/",children:"verification of smart\ncontracts"})," deployed on Sapphire. Make sure you have\nthe ",(0,r.jsx)(t.strong,{children:"address of each deployed contract"})," available (your deployment scripts\nshould report those) and the ",(0,r.jsx)(t.strong,{children:"contracts JSON metadata file"})," generated when\ncompiling contracts (Hardhat stores it inside the ",(0,r.jsx)(t.code,{children:"artifacts/build-info"})," folder\nand names it as a 32-digit hex number). If your project contains multiple\ncontracts, you will need to verify each contract separately."]}),"\n",(0,r.jsxs)(t.admonition,{title:"Contract deployment encryption",type:"warning",children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Do not deploy your contract with an encrypted contract deployment transaction,\nif you want to verify it."})," For example, if your ",(0,r.jsx)(t.code,{children:"hardhat.config.ts"}),"\nor deployment script contains ",(0,r.jsx)(t.code,{children:"import '@oasisprotocol/sapphire-hardhat'"})," or\n",(0,r.jsx)(t.code,{children:"import '@oasisprotocol/sapphire-paratime'"})," lines at the beginning, you should\ncomment those out for the deployment."]}),(0,r.jsxs)(t.p,{children:["Verification services will try to match the contract deployment transaction code\nwith the one in the provided contract's metadata. Because the transaction was\nencrypted with an ephemeral ParaTime key, the verification service will not be\nable to decrypt it. Some services may extract the contract's bytecode from the\nchain directly by calling ",(0,r.jsx)(t.code,{children:"eth_getCode"})," RPC, but this will not work correctly\nfor contracts with immutable variables."]})]}),"\n",(0,r.jsx)(t.h2,{id:"verification-with-hardhat",children:"Verification with Hardhat"}),"\n",(0,r.jsxs)(t.p,{children:["If you use Hardhat to deploy your contracts, consider using the\n",(0,r.jsx)(t.a,{href:"https://hardhat.org/hardhat-runner/plugins/nomicfoundation-hardhat-verify",children:"hardhat-verify"})," plugin."]}),"\n",(0,r.jsxs)(t.p,{children:["To configure it, add the following to your ",(0,r.jsx)(t.code,{children:"hardhat.config.ts"})," file:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="hardhat.config.ts"',children:"\tetherscan: {\n\t\t//  Enabled by default (not supported on Sapphire)\n\t\tenabled: false\n\t},\n\tsourcify: {\n\t\t// Disabled by default\n\t\t// Doesn't need an API key\n\t\tenabled: true\n\t}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now you can use the ",(0,r.jsx)(t.code,{children:"verify"})," task:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:'pnpm hardhat verify --network sapphire-testnet DEPLOYED_CONTRACT_ADDRESS "Constructor argument 1"\n'})}),"\n",(0,r.jsx)(t.h2,{id:"verification-with-foundry",children:"Verification with Foundry"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://book.getfoundry.sh",children:"Foundry"})," natively supports Sourcify verification. To use ",(0,r.jsx)(t.strong,{children:"Sourcify"})," as a\nprovider, specify it with the ",(0,r.jsx)(t.code,{children:"--verifier"})," option."]}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"forge verify-contract <address> src/MyToken.sol:MyToken --verifier sourcify\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["To see all available options and more examples visit the\n",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://book.getfoundry.sh/reference/forge/forge-verify-contract",children:"verify-contract page of foundry"})})," or the ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://docs.sourcify.dev/docs/how-to-verify/#foundry",children:"sourcify docs"})})]})}),"\n",(0,r.jsx)(t.h2,{id:"verification-on-sourcify",children:"Verification on Sourcify"}),"\n",(0,r.jsx)(t.p,{children:"To verify maunally a contract deployed on Sapphire Mainnet or Testnet on Sourcify:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Visit the ",(0,r.jsx)(t.a,{href:"https://sourcify.dev/",children:"Sourcify"}),' website and hit the "VERIFY CONTRACT" button.']}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Sourcify website",src:n(2853).A+"",width:"1564",height:"979"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Upload the contracts JSON metadata file. (Sourcify can parse the Hardhat\n.json output file under ",(0,r.jsx)(t.code,{children:"artifacts/build-info"}),")"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Sourcify: Upload metadata JSON file",src:n(5022).A+"",width:"1564",height:"979"})}),"\n",(0,r.jsx)(t.admonition,{title:"Store your metadata files",type:"tip",children:(0,r.jsxs)(t.p,{children:["For production deployments, it is generally a good idea to ",(0,r.jsx)(t.strong,{children:"archive your\ncontract metadata JSON file"})," since it is not only useful for the\nverification, but contains a copy of all the source files, produced bytecode,\nan ABI, compiler and other relevant contract-related settings that may be\nuseful in the future. Sourcify will store the metadata file for you and will\neven make it available via IPFS, but it is still a good idea to store it\nyourself."]})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Sourcify will decode the metadata and prepare a list of included contracts on\nthe right. Enter the address of the specific contract and select the "Oasis\nSapphire" or "Oasis Sapphire Testnet" chain for Mainnet or Testnet\naccordingly. If your contract assigns any immutable variables in the\nconstructor, you will also need to correctly fill those out under the "More\nInputs (optional)" panel. Finally, click on the "Verify" button.'}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Sourcify: Verify contract",src:n(4519).A+"",width:"1564",height:"2420"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["If everything goes well, you will get a ",(0,r.jsx)(t.em,{children:"Perfect match"})," notice. Your\ncontract is now verified. Congratulations!"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["In case of a ",(0,r.jsx)(t.em,{children:"Partial match"}),", the contracts metadata JSON differs from the one\nused for deployment although the compiled contract bytecode matched. Make sure\nthe source code ",(0,r.jsx)(t.code,{children:".sol"})," file of the contract is the same as the one used during the\ndeployment (including the comments, variable names and source code file\nnames) and use the same version of Hardhat and solc compiler."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["You can also explore all verification methods on Sourcify by reading the\n",(0,r.jsx)(t.a,{href:"https://docs.sourcify.dev/docs/how-to-verify/",children:"official Sourcify contract verification instructions"}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(t.h3,{id:"etherscan-error-with-hardhat-verify",children:"Etherscan error with hardhat-verify"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Cause"}),": hardhat-verify tries to verify a contract on Etherscan for an unsupported network."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Solution"}),": Disable Etherscan verification with","\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"etherscan: {\n    //  Enabled by default (not supported on Sapphire)\n    enabled: false\n},\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},2853:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/sourcify1-898a49b3519501962fe80f3ba09314b1.png"},5022:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/sourcify2-d95710724b0373068c2ac0f857e07928.png"},4519:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/sourcify3-8be00790df0e04f4720273e6cde8a867.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);