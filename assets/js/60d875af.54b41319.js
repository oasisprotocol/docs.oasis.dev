"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[436],{8667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"node/run-your-node/README","title":"Run your node","description":"The Oasis Network consists of several types of nodes, each serving distinct","source":"@site/docs/node/run-your-node/README.mdx","sourceDirName":"node/run-your-node","slug":"/node/run-your-node/","permalink":"/node/run-your-node/","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/README.mdx","tags":[],"version":"current","lastUpdatedAt":1740674219000,"frontMatter":{},"sidebar":"operators","previous":{"title":"Genesis Document","permalink":"/node/genesis-doc"},"next":{"title":"Prerequisites","permalink":"/node/run-your-node/prerequisites"}}');var s=t(4848),r=t(8453),o=t(4117),a=t(547);const c={},d="Run your node",l={},h=[{value:"Validator Node",id:"validator-node",level:2},{value:"Compute Nodes",id:"compute-nodes",level:2},{value:"Client Nodes",id:"client-nodes",level:2},{value:"Archive Node",id:"archive-node",level:2},{value:"Seed Node",id:"seed-node",level:2},{value:"Key Manager Node",id:"key-manager-node",level:2},{value:"Services",id:"services",level:2},{value:"Rosetta Gateway",id:"rosetta-gateway",level:3},{value:"Public gRPC",id:"public-grpc",level:3},{value:"Web3 Gateway",id:"web3-gateway",level:3},{value:"See also",id:"see-also",level:2}];function p(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"run-your-node",children:"Run your node"})}),"\n",(0,s.jsx)(n.p,{children:"The Oasis Network consists of several types of nodes, each serving distinct\nroles to maintain the functionality, security, and decentralization of the\nnetwork. In this section you can find descriptions of the main types of nodes\nwithin the Oasis Network."}),"\n",(0,s.jsx)(n.h2,{id:"validator-node",children:"Validator Node"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/node/run-your-node/validator-node",children:"Validator Node"})," is an essential component, as Oasis Network uses\nproof-of-stake (PoS) consensus mechanisms. It is responsible for verifying transactions and proposing new blocks to be added to the blockchain. Validator\nnodes operate on the consensus layer by staking the network's tokens, which\ngrants them the right to participate in the consensus process. This process\ninvolves validating transactions, signing blocks, and ensuring the integrity of\nthe blockchain."]}),"\n",(0,s.jsx)(n.h2,{id:"compute-nodes",children:"Compute Nodes"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/node/run-your-node/paratime-node",children:"Compute Nodes"})," are responsible for executing smart contracts and processing\ntransactions within a specific ParaTime (Parallel Runtime). These nodes handle\nthe actual computation tasks, such as running decentralized applications\n(dApps), performing data processing, and executing privacy-preserving smart\ncontracts."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Sapphire Compute Node"})," is responsible for executing EVM-compatible\nprivacy-preserving smart contracts and processing transactions within the\nSapphire ParaTime. These nodes validate and execute transactions while\nmaintaining the confidentiality of sensitive data, which is a crucial aspect\nof applications that handle private information or require enhanced security.\nThis is achieved through trusted execution environments (TEEs) that ensure\ndata remains encrypted and confidential, even while being processed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cipher Compute Node"})," is responsible for executing privacy-preserving smart\ncontracts written in Oasis Wasm and processing transactions within the Cipher\nParaTime. These nodes validate and execute transactions while maintaining the\nconfidentiality of sensitive data, which is a crucial aspect of applications\nthat handle private information or require enhanced security. This is achieved\nthrough trusted execution environments (TEEs) that ensure data remains\nencrypted and confidential, even while being processed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Emerald Compute Node"})," is responsible for executing EVM-compatible smart\ncontracts and processing transactions within the Emerald ParaTime. It performs\ntasks such as validating transactions, running EVM-based smart contracts, and\nensuring that the operations within the Emerald ParaTime are carried out\nefficiently."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"client-nodes",children:"Client Nodes"}),"\n",(0,s.jsx)(n.p,{children:"A Client Node is a type of node within the Oasis Network that serves as\nan interface for users or other applications to interact with the blockchain.\nUnlike compute nodes, which handle transaction processing and smart contract\nexecution, client nodes are primarily responsible for tasks such as querying\nthe blockchain, submitting transactions, and retrieving other data from the\nnetwork."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/node/run-your-node/non-validator-node",children:"Non-Validator Node"})})," is a type of node in the Oasis Network that does not\nparticipate in the consensus process of validating and proposing new blocks.\nInstead, it has client node functions that support the network's operations and\ndecentralization."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/node/run-your-node/paratime-client-node",children:"Sapphire Client Node"})})," is a specific type of client node within the Oasis\nNetwork that interacts with the Sapphire ParaTime. The Sapphire ParaTime is\ndesigned to support EVM-compatible confidential smart contracts and\nprivacy-preserving decentralized applications (dApps) with strong privacy\nfeatures and high performance."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/node/run-your-node/paratime-client-node",children:"Cipher Client Node"})})," is a type of node within the Oasis Network designed\nto interact specifically with the Cipher ParaTime. The Cipher ParaTime is known\nfor its strong privacy features, allowing for the execution of confidential\nsmart contracts and the development of privacy-preserving decentralized\napplications (dApps)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/node/run-your-node/paratime-client-node",children:"Emerald Client Node"})})," is a specific type of client node within the Oasis\nNetwork, designed to interact with the Emerald ParaTime. The Emerald ParaTime is\nan Ethereum-compatible environment on the Oasis Network, allowing developers\nto deploy and manage decentralized applications (dApps) that utilize the\nEthereum Virtual Machine (EVM)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"archive-node",children:"Archive Node"}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/node/run-your-node/archive-node",children:"Archive Node"})," is a specialized node within the Oasis Network that stores the\nentire blockchain history, making it a crucial tool for in-depth analysis,\ndevelopment, and ensuring that the network's past states remain accessible."]}),"\n",(0,s.jsx)(n.h2,{id:"seed-node",children:"Seed Node"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/node/run-your-node/seed-node",children:"Seed Node"})," is a type of node in the Oasis Network that serves a critical role\nin helping other nodes discover peers and join the network (",(0,s.jsx)(n.em,{children:"address book"}),").\nUnlike validator nodes, which participate in the consensus process, Seed Nodes\ndo not play a direct role in consensus."]}),"\n",(0,s.jsx)(n.h2,{id:"key-manager-node",children:"Key Manager Node"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/node/run-your-node/keymanager-node/",children:"Key Manager Node"})," is a specialized node in the Oasis Network responsible for\nsecurely managing cryptographic keys used in confidential computing. These nodes\nare crucial for the network's privacy-preserving features, enabling secure\nencryption and decryption of data processed within Trusted Execution\nEnvironments (TEEs). They play a vital role in enabling the Oasis Network's\nsecure, decentralized, and privacy-focused operations."]}),"\n",(0,s.jsx)(n.h2,{id:"services",children:"Services"}),"\n",(0,s.jsx)(n.h3,{id:"rosetta-gateway",children:"Rosetta Gateway"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-rosetta-gateway",children:"Rosetta Gateway"})," service is a specialized service within the Oasis Network\nthat implements the ",(0,s.jsx)(n.a,{href:"https://docs.cdp.coinbase.com/mesh/docs/api-reference",children:"Rosetta API"})," to provide a standardized and simplified\ninterface for interacting with the blockchain. This service is crucial for\nenabling seamless integration between the Oasis Network and various external\nplatforms, such as exchanges, wallets, custodians, and blockchain-based\napplications. The Rosetta Gateway connects to a ",(0,s.jsx)(n.a,{href:"#client-nodes",children:"non-validator"}),"\nnode."]}),"\n",(0,s.jsx)(n.h3,{id:"public-grpc",children:"Public gRPC"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/node/grpc",children:"Oasis gRPC protocol"})," is an efficient, real-time, and cross-platform\ncommunication protocol that allows developers to both manage the Oasis node and communicate with the Oasis network. While each Oasis node opens a gRPC socket,\nthe public endpoints run a proxy and expose only a small, safe subset of the\nAPI calls publicly."]}),"\n",(0,s.jsx)(n.h3,{id:"web3-gateway",children:"Web3 Gateway"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/node/web3",children:"Web3 Gateway"})," enables interaction with the Oasis Network using standard\nWeb3 protocol, which is widely used in the Ethereum ecosystem. It acts as a\nbridge between Web3-based applications and the Oasis Network, allowing\ndevelopers to leverage the tools, libraries, and practices familiar in\nEthereum development while benefiting from the unique features of the Oasis\nNetwork, such as privacy and confidentiality.  The Web3 gateway connects to a\n",(0,s.jsx)(n.a,{href:"#compute-nodes",children:"compute"})," or a ",(0,s.jsx)(n.a,{href:"#client-nodes",children:"client"})," Sapphire or Emerald node."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsx)(a.A,{items:[(0,o.$)("/node/run-your-node/maintenance"),(0,o.$)("/node/run-your-node/advanced"),(0,o.$)("/node/run-your-node/troubleshooting")]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},4405:(e,n,t)=>{t.d(n,{A:()=>g});t(6540);var i=t(4164),s=t(6289),r=t(3751),o=t(1430),a=t(2887),c=t(539),d=t(9303);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=t(4848);function p(e){let{href:n,children:t}=e;return(0,h.jsx)(s.A,{href:n,className:(0,i.A)("card padding--lg",l.cardContainer),children:t})}function u(e){let{href:n,icon:t,title:s,description:r}=e;return(0,h.jsxs)(p,{href:n,children:[(0,h.jsxs)(d.A,{as:"h2",className:(0,i.A)("text--truncate",l.cardTitle),title:s,children:[t," ",s]}),r&&(0,h.jsx)("p",{className:(0,i.A)("text--truncate",l.cardDescription),title:r,children:r})]})}function m(e){let{item:n}=e;const t=(0,r.Nr)(n),i=function(){const{selectMessage:e}=(0,o.W)();return n=>e(n,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,h.jsx)(u,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??i(n.items.length)}):null}function f(e){let{item:n}=e;const t=(0,a.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,r.cC)(n.docId??void 0);return(0,h.jsx)(u,{href:n.href,icon:t,title:n.label,description:n.description??i?.description})}function g(e){let{item:n}=e;switch(n.type){case"link":return(0,h.jsx)(f,{item:n});case"category":return(0,h.jsx)(m,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}},547:(e,n,t)=>{t.d(n,{A:()=>c});t(6540);var i=t(4164),s=t(3751),r=t(4405),o=t(4848);function a(e){let{className:n}=e;const t=(0,s.$S)();return(0,o.jsx)(c,{items:t.items,className:n})}function c(e){const{items:n,className:t}=e;if(!n)return(0,o.jsx)(a,{...e});const c=(0,s.d1)(n);return(0,o.jsx)("section",{className:(0,i.A)("row",t),children:c.map(((e,n)=>(0,o.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,o.jsx)(r.A,{item:e})},n)))})}},1430:(e,n,t)=>{t.d(n,{W:()=>d});var i=t(6540),s=t(797);const r=["zero","one","two","few","many","other"];function o(e){return r.filter((n=>e.includes(n)))}const a={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,i.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:o(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),a}}),[e])}function d(){const e=c();return{selectMessage:(n,t)=>function(e,n,t){const i=e.split("|");if(1===i.length)return i[0];i.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${i.length}: ${e}`);const s=t.select(n),r=t.pluralForms.indexOf(s);return i[Math.min(r,i.length-1)]}(t,n,e)}}},4117:(e,n,t)=>{t.d(n,{$:()=>o});var i=t(1858),s=t(797);function r(e){for(const n of e){const e=n.href;e&&void 0===globalThis.sidebarItemsMap[e]&&(globalThis.sidebarItemsMap[e]=n),"category"===n.type&&r(n.items)}}function o(e){const{siteConfig:n,siteMetadata:t}=(0,s.A)(),o=(0,i.r)();if(!o)throw new Error("Unexpected: cant find docsVersion in current context");if(void 0===globalThis.sidebarItemsMap){globalThis.sidebarItemsMap={};for(const e in o.docsSidebars)r(o.docsSidebars[e])}if(void 0===globalThis.sidebarItemsMap[e]){if(console.log(`Item ${e} not found. Registered sidebar items:`),console.log(globalThis.sidebarItemsMap),"throw"==n.onBrokenMarkdownLinks)throw new Error(`Unexpected: sidebar item with href ${e} does not exist.`);return globalThis.sidebarItemsMap["/general/"]}return globalThis.sidebarItemsMap[e]}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);